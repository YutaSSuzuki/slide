[
  {
    "objectID": "reading_circle/reading_circle2023_04.html#処理の高速化をする４つの方法",
    "href": "reading_circle/reading_circle2023_04.html#処理の高速化をする４つの方法",
    "title": "処理の高速化",
    "section": "処理の高速化をする４つの方法",
    "text": "処理の高速化をする４つの方法\n\n動くプログラムを作成した後に処理の高速化を考える際、参考になる ４つの考え方を紹介します。 \n\n組み込み関数の使用 \n外部モジュールの使用 \nアルゴリズムの最適化 \n並列化\n\n実行環境 3 GHz 6コアIntel Core i5、メモリ:32G\npython3.10.10"
  },
  {
    "objectID": "reading_circle/reading_circle2023_04.html#組み込み関数を使おう",
    "href": "reading_circle/reading_circle2023_04.html#組み込み関数を使おう",
    "title": "処理の高速化",
    "section": "組み込み関数を使おう",
    "text": "組み込み関数を使おう\n\n1から100000000までの数の総和を計算する。 自作コードの使用\nimport time\nstart_time = time.time()\ntotal = 0\nfor i in range(1,100000001):\n    total += i\nend_time = time.time()\nprint(\"計算結果:\",total,\"\\nsumの処理時間: \", end_time - start_time)\n#処理時間: 8.668177366256714秒\n組み込み関数（sum()）の使用\nimport time\nstart_time = time.time()\ntotal = sum(list(range(1,100000001)))\nend_time = time.time()\nprint(\"計算結果:\",total,\"\\nsumの処理時間: \", end_time - start_time)\n#処理時間:4.457662105560303秒"
  },
  {
    "objectID": "reading_circle/reading_circle2023_04.html#外部モジュールを使おう",
    "href": "reading_circle/reading_circle2023_04.html#外部モジュールを使おう",
    "title": "処理の高速化",
    "section": "外部モジュールを使おう",
    "text": "外部モジュールを使おう\n\npythonの場合数値計算に最適なNumpyがある。\nNumpyを使用\nimport time\nstart_time = time.time()\nimport numpy\ntotal = numpy.sum(numpy.arange(1,100000001))\nend_time = time.time()\nprint(\"計算結果:\",total,\"\\nnumpyの処理時間: \", end_time - start_time)\n#処理時間:0.5025210380554199秒\n実用例：RでCNSとSVの重なりをbiocoductorで検出"
  },
  {
    "objectID": "reading_circle/reading_circle2023_04.html#アルゴリズムを見直そう",
    "href": "reading_circle/reading_circle2023_04.html#アルゴリズムを見直そう",
    "title": "処理の高速化",
    "section": "アルゴリズムを見直そう",
    "text": "アルゴリズムを見直そう\n\nアルゴリズムを見直す際以下の視点がある。\n\n同じ処理をまとめる\nデータの読み書きを減らす\n型の変換を減らす\n\n総和の公式(\\(\\frac n2(1+n)\\))を使用\nimport time\nstart_time = time.time()\ntotal = int(100000000*(1+100000000)/2)\nend_time = time.time()\nprint(\"計算結果:\",total,\"\\nアルゴリズムの変更後の処理時間: \", end_time - start_time)\n#処理時間:1.1920928955078125e-06秒"
  },
  {
    "objectID": "reading_circle/reading_circle2023_04.html#並列化をしよう",
    "href": "reading_circle/reading_circle2023_04.html#並列化をしよう",
    "title": "処理の高速化",
    "section": "並列化をしよう",
    "text": "並列化をしよう\n\n処理を分割して並列化することで高速化することがある。 chatGPTにより生成したものを修正\nimport time\nstart_time = time.time()\nfrom multiprocessing import Process, Value, Lock\ndef cal(start, end, sum_cal, lock):\n    local_sum = 0\n    for i in range(start, end+1):\n        local_sum += i\n    with lock:\n        sum_cal.value +=local_sum\nif __name__ == '__main__':\n    n =  100000000\n    sum_cal = Value('l', 0)\n    lock = Lock()\n    half = int(n/2)\n    p1 = Process(target=cal, args=(1, half, sum_cal, lock))\n    p2 = Process(target=cal, args=(half+1, n, sum_cal, lock))\n    p1.start()\n    p2.start()\n    p1.join()\n    p2.join()\n    total = sum_cal.value\n    end_time = time.time()\n    print(\"計算結果:\",total,\"\\n並列化後の処理時間: \", end_time - start_time)\n#処理時間:2.640056848526001秒"
  },
  {
    "objectID": "reading_circle/reading_circle2023_04.html#注意点",
    "href": "reading_circle/reading_circle2023_04.html#注意点",
    "title": "処理の高速化",
    "section": "注意点",
    "text": "注意点\n\n高速化後は結果が変わっていないかを確認しよう 計算過程に少数が入ると整数への変換時に結果が変わることがある。\n\nprint(3/2 + 2/3) # 2.16666\nprint(int(2/3) + int(3/2)) #1\n\n\n適切な方法を使おう 処理によっては紹介した方法では遅くなる場合もある。 １行づつ実行し遅い箇所を特定し最適な方法を探そう。"
  },
  {
    "objectID": "reading_circle/reading_circle2023_04.html#おまけ言語を見直そう",
    "href": "reading_circle/reading_circle2023_04.html#おまけ言語を見直そう",
    "title": "処理の高速化",
    "section": "おまけ：言語を見直そう",
    "text": "おまけ：言語を見直そう\n\nコンパイル型言語の使用によりインタプリンタ型言語の 高速化と同じ結果が望める。  chatGPTにより生成したものを修正\n#include &lt;iostream&gt;\n#include &lt;chrono&gt;\nusing namespace std;\nint main()\n{   int n = 100000000;\n    long sum_ = 0;\n    auto start = chrono::steady_clock::now(); // 開始時刻\n    for (int i = 1; i &lt;= n; i++) {\n        sum_ += i;}\n    auto end = chrono::steady_clock::now(); // 終了時刻\n    auto diff = end - start; // 経過時間\n    cout &lt;&lt; \"Sum = \" &lt;&lt; sum_ &lt;&lt; endl;\n    cout &lt;&lt; \"Elapsed time = \" &lt;&lt; chrono::duration&lt;double, milli&gt;(diff).count() &lt;&lt; \" ms\" &lt;&lt; endl;\n    return 0;}\n/*処理時間:0.224624秒*/"
  },
  {
    "objectID": "reading_circle/reading_circle2023_04.html#おまけcの実行方法",
    "href": "reading_circle/reading_circle2023_04.html#おまけcの実行方法",
    "title": "処理の高速化",
    "section": "おまけ:C++の実行方法",
    "text": "おまけ:C++の実行方法\n\nコンパイル\ng ++ &lt;C++のファイル名.cpp&gt; -o &lt;出力したい名前&gt;\n実行\n&lt;出力したファイル名&gt;"
  },
  {
    "objectID": "reading_circle/ダミー.html#はじめに",
    "href": "reading_circle/ダミー.html#はじめに",
    "title": "インストール概要",
    "section": "はじめに",
    "text": "はじめに\nソフトウェアのインストールは公式で推奨された方法を\n可能な限り使ってください\n実行環境\n\nmacOS Monterey 12.6.6\ngcc 13.1.0\n\n参考文献\n\nHomebrew公式サイト\nメタルさんサイト"
  },
  {
    "objectID": "reading_circle/ダミー.html#環境構築は大変",
    "href": "reading_circle/ダミー.html#環境構築は大変",
    "title": "インストール概要",
    "section": "環境構築は大変",
    "text": "環境構築は大変\n理想的な研究 出典:いらすとや、Homebrew  \n現実の研究"
  },
  {
    "objectID": "reading_circle/ダミー.html#人とパソコンは言語が違う",
    "href": "reading_circle/ダミー.html#人とパソコンは言語が違う",
    "title": "インストール概要",
    "section": "人とパソコンは言語が違う",
    "text": "人とパソコンは言語が違う\n\n\nパソコンが理解できるデータをバイナリーデータと言う"
  },
  {
    "objectID": "reading_circle/ダミー.html#プログラムは翻訳され実行される",
    "href": "reading_circle/ダミー.html#プログラムは翻訳され実行される",
    "title": "インストール概要",
    "section": "プログラムは翻訳され実行される",
    "text": "プログラムは翻訳され実行される\n\nプログラムを翻訳する操作をコンパイルとよぶ。"
  },
  {
    "objectID": "reading_circle/ダミー.html#コンパイルの扱いは言語ごとに違う",
    "href": "reading_circle/ダミー.html#コンパイルの扱いは言語ごとに違う",
    "title": "インストール概要",
    "section": "コンパイルの扱いは言語ごとに違う",
    "text": "コンパイルの扱いは言語ごとに違う\n\nコンパイル言語（Go、C++、Java）\n一度コンパイルしたファイルを使い回す \nインタプリタ言語（Python、R、Javascript）\n実行するたびにコンパイルする"
  },
  {
    "objectID": "reading_circle/ダミー.html#インストールってなに",
    "href": "reading_circle/ダミー.html#インストールってなに",
    "title": "インストール概要",
    "section": "インストールってなに？",
    "text": "インストールってなに？\nソフトウェアをパソコンへ導入し、使用可能な状態にする処理や作業のこと\nソフトウェアのインストールには2種の方法がある\n\nソースコードからソフトウェアを構築する\n（ソースからビルド）\nパッケージマネージャーを使用する\n（Homebrew,condaなど）"
  },
  {
    "objectID": "reading_circle/ダミー.html#ソースコードからのインストール",
    "href": "reading_circle/ダミー.html#ソースコードからのインストール",
    "title": "インストール概要",
    "section": "ソースコードからのインストール",
    "text": "ソースコードからのインストール\nコンパイル言語の場合\n\nソースコードのダウンロード\nコンパイル用のファイルを作成（ない場合もある）\nコンパイル実行\n実行ファイルがある場所へパスを通す\n\nインタプリタ言語の場合\n\nソースコードのダウンロード\nダウンロードした場所へパスを通す"
  },
  {
    "objectID": "reading_circle/ダミー.html#コンパイル言語インストール体験",
    "href": "reading_circle/ダミー.html#コンパイル言語インストール体験",
    "title": "インストール概要",
    "section": "コンパイル言語インストール体験",
    "text": "コンパイル言語インストール体験\n\nソースコードのダウンロード\n\ngit clone https://github.com/YutaSSuzuki/install_practice.git\n\nコンパイル用のファイル（Makefile）を作成：\n\n\ncd compile\n./configure\n\nコンパイル実行（実行ファイルを作成）:\n\n\nmake"
  },
  {
    "objectID": "reading_circle/ダミー.html#コンパイル言語インストール体験-1",
    "href": "reading_circle/ダミー.html#コンパイル言語インストール体験-1",
    "title": "インストール概要",
    "section": "コンパイル言語インストール体験",
    "text": "コンパイル言語インストール体験\n\nパスを通す:\n\n\npwd #出力結果をコピー\nnano ~/.zshrc #shellの種類に応じて_の前を変更\n\n# .zshrc内の一番下の行に以下の内容を追記\nexport PATH=\"コピー内容をペースト:$PATH\"\n\nsource ~/.zshrc\n プログラムの実行\nprime\n\n🔰 好きな整数を半角で入力し、素数判定を行う\n🔰 ディレクトリを移動しprimeを実行しよう"
  },
  {
    "objectID": "reading_circle/ダミー.html#インタプリタ言語インストール体験",
    "href": "reading_circle/ダミー.html#インタプリタ言語インストール体験",
    "title": "インストール概要",
    "section": "インタプリタ言語インストール体験",
    "text": "インタプリタ言語インストール体験\n\npythonコードのダウンロード\n\n# 今回はすでに終わっています。\n#git clone https://github.com/YutaSSuzuki/install_practice.git\n\nパスを通す\n\ncd ../interpreter\npwd #出力結果をコピー\nnano ~/.zshrc #shellの種類に応じて_の前を変更\n\n# zshrc内の一番下の行に以下の内容を追記\nexport PATH=\"コピー内容をペースト:$PATH\"\nsource ~/.zshrc\nプログラムの実行\nprime.py\n\n🔰 好きな整数を半角で入力し、素数判定を行う\n🔰 ディレクトリを移動しprime.pyを実行しよう"
  },
  {
    "objectID": "reading_circle/ダミー.html#余談新しいコンパイルcmake",
    "href": "reading_circle/ダミー.html#余談新しいコンパイルcmake",
    "title": "ソフトインストール概要理解",
    "section": "余談：新しいコンパイルcmake",
    "text": "余談：新しいコンパイルcmake\nこれまではconfigureで環境を読み取り、Makefileを作るのが一般的だった。\nしかし最近はcmakeを活用したMakefileの作成が主流\ncmakeの特徴として以下のものが挙げられる\n\n高速\n作成側とインストール側の両方でcmakeのインストールが必要"
  },
  {
    "objectID": "reading_circle/ダミー.html#パッケージマネージャーとは",
    "href": "reading_circle/ダミー.html#パッケージマネージャーとは",
    "title": "インストール概要",
    "section": "パッケージマネージャーとは？",
    "text": "パッケージマネージャーとは？\nソフトウェアのインストールやバージョン管理を行う\nソフトのこと\n（Homebrew,Anaconda,pip3など）\n以下の利点がある\n\nインストールをコマンド１つで行える\nアップデートの際、ソフトを入れ直す必要がない\nインストールに必要なものを全て入れてくれる"
  },
  {
    "objectID": "reading_circle/ダミー.html#homebrewって何",
    "href": "reading_circle/ダミー.html#homebrewって何",
    "title": "インストール概要",
    "section": "Homebrewって何？",
    "text": "Homebrewって何？\nMacOS、Linux用のパッケージマネージャー\nGithub上に公式が公開しているリポジトリから\nソフトウェアをインストールできる。\n\nインストール\n\nbrew install &lt;ソフト名&gt;\n\nインストールしたソフトの一覧表示\n\nbrew list \n\nHomebrewで入れたソフトのアップデート\n\nbrew update"
  },
  {
    "objectID": "reading_circle/ダミー.html#便利機能",
    "href": "reading_circle/ダミー.html#便利機能",
    "title": "インストール概要",
    "section": "便利機能",
    "text": "便利機能\nbottle\nバイナリーデータを直接ダウンロードする。\n以下の条件下で使用できなくなるので注意\n\nMacOSのバージョンが対応していない\nHomebrewがデフォルトの場所にインストールされてい\n\ntap\nGithub上にアップロードされている公式以外の\nリポジトリのソフトをインストールできる。\nbrew install &lt;githubユーザー名&gt;/&lt;リポジトリ名&gt;"
  },
  {
    "objectID": "reading_circle/ダミー.html#インストール時のエラー対応",
    "href": "reading_circle/ダミー.html#インストール時のエラー対応",
    "title": "インストール概要",
    "section": "インストール時のエラー対応",
    "text": "インストール時のエラー対応\n\nパッケージマネージャーを使用\nバイナリーデータを直接ダウンロード\nソフトウェアのissueを確認"
  },
  {
    "objectID": "reading_circle/ダミー.html#解決が難しい状況",
    "href": "reading_circle/ダミー.html#解決が難しい状況",
    "title": "インストール概要",
    "section": "解決が難しい状況",
    "text": "解決が難しい状況\n\n管理者権限がない\n必須のソフトの配布が終了している\n\n対応策\n\nApptainerなど構築済みのものをパスを指定して使用する\n別のソフトウェアを探す\n環境を変える\n\nDDBJからScorpionへ移動する"
  },
  {
    "objectID": "reading_circle/ダミー.html#余談新しいmakefile作成cmake",
    "href": "reading_circle/ダミー.html#余談新しいmakefile作成cmake",
    "title": "インストール概要",
    "section": "余談：新しいMakefile作成CMake",
    "text": "余談：新しいMakefile作成CMake\n\n高速\n作成側とインストール側の両方でCMakeのインストールが必要\n\n使用時は空のディレクトリを作成し、その中で実行する\nmkdir build\ncmake &lt;CMakeLists.txtが配置されたディレクトリ&gt;\nmake"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#はじめに",
    "href": "reading_circle/2023_0704_install_software.html#はじめに",
    "title": "インストール概要",
    "section": "はじめに",
    "text": "はじめに\nソフトウェアのインストールは公式で推奨された方法を\n可能な限り使ってください\n実行環境\n\nmacOS Monterey 12.6.6\ngcc 13.1.0\n\n参考文献\n\nHomebrew公式サイト\nメタルさんサイト"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#環境構築は大変",
    "href": "reading_circle/2023_0704_install_software.html#環境構築は大変",
    "title": "インストール概要",
    "section": "環境構築は大変",
    "text": "環境構築は大変\n理想的な研究 出典:いらすとや、Homebrew  \n現実の研究"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#人とパソコンは言語が違う",
    "href": "reading_circle/2023_0704_install_software.html#人とパソコンは言語が違う",
    "title": "インストール概要",
    "section": "人とパソコンは言語が違う",
    "text": "人とパソコンは言語が違う\n\n\nパソコンが理解できるデータをバイナリーデータと言う"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#プログラムは翻訳され実行される",
    "href": "reading_circle/2023_0704_install_software.html#プログラムは翻訳され実行される",
    "title": "インストール概要",
    "section": "プログラムは翻訳され実行される",
    "text": "プログラムは翻訳され実行される\n\nプログラムを翻訳する操作をコンパイルとよぶ。"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#コンパイルの扱いは言語ごとに違う",
    "href": "reading_circle/2023_0704_install_software.html#コンパイルの扱いは言語ごとに違う",
    "title": "インストール概要",
    "section": "コンパイルの扱いは言語ごとに違う",
    "text": "コンパイルの扱いは言語ごとに違う\n\nコンパイル言語（Go、C++、Java）\n一度コンパイルしたファイルを使い回す \nインタプリタ言語（Python、R、Javascript）\n実行するたびにコンパイルする"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#インストールってなに",
    "href": "reading_circle/2023_0704_install_software.html#インストールってなに",
    "title": "インストール概要",
    "section": "インストールってなに？",
    "text": "インストールってなに？\nソフトウェアをパソコンへ導入し、使用可能な状態にする処理や作業のこと\nソフトウェアのインストールには2種の方法がある\n\nソースコードからソフトウェアを構築する\n（ソースからビルド）\nパッケージマネージャーを使用する\n（Homebrew,condaなど）"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#ソースコードからのインストール",
    "href": "reading_circle/2023_0704_install_software.html#ソースコードからのインストール",
    "title": "インストール概要",
    "section": "ソースコードからのインストール",
    "text": "ソースコードからのインストール\nコンパイル言語の場合\n\nソースコードのダウンロード\nコンパイル用のファイルを作成（ない場合もある）\nコンパイル実行\n実行ファイルがある場所へパスを通す\n\nインタプリタ言語の場合\n\nソースコードのダウンロード\nダウンロードした場所へパスを通す"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#コンパイル言語インストール体験",
    "href": "reading_circle/2023_0704_install_software.html#コンパイル言語インストール体験",
    "title": "インストール概要",
    "section": "コンパイル言語インストール体験",
    "text": "コンパイル言語インストール体験\n\nソースコードのダウンロード\n\ngit clone https://github.com/YutaSSuzuki/install_practice.git\n\nコンパイル用のファイル（Makefile）を作成：\n\n\ncd compile\n./configure\n\nコンパイル実行（実行ファイルを作成）:\n\n\nmake"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#コンパイル言語インストール体験-1",
    "href": "reading_circle/2023_0704_install_software.html#コンパイル言語インストール体験-1",
    "title": "インストール概要",
    "section": "コンパイル言語インストール体験",
    "text": "コンパイル言語インストール体験\n\nパスを通す:\n\n\npwd #出力結果をコピー\nnano ~/.zshrc #shellの種類に応じて_の前を変更\n\n# .zshrc内の一番下の行に以下の内容を追記\nexport PATH=\"コピー内容をペースト:$PATH\"\n\nsource ~/.zshrc\n プログラムの実行\nprime\n\n🔰 好きな整数を半角で入力し、素数判定を行う\n🔰 ディレクトリを移動しprimeを実行しよう"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#インタプリタ言語インストール体験",
    "href": "reading_circle/2023_0704_install_software.html#インタプリタ言語インストール体験",
    "title": "インストール概要",
    "section": "インタプリタ言語インストール体験",
    "text": "インタプリタ言語インストール体験\n\npythonコードのダウンロード\n\n# 今回はすでに終わっています。\n#git clone https://github.com/YutaSSuzuki/install_practice.git\n\nパスを通す\n\ncd ../interpreter\npwd #出力結果をコピー\nnano ~/.zshrc #shellの種類に応じて_の前を変更\n\n# zshrc内の一番下の行に以下の内容を追記\nexport PATH=\"コピー内容をペースト:$PATH\"\nsource ~/.zshrc\nプログラムの実行\nprime.py\n\n🔰 好きな整数を半角で入力し、素数判定を行う\n🔰 ディレクトリを移動しprime.pyを実行しよう"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#余談新しいmakefile作成cmake",
    "href": "reading_circle/2023_0704_install_software.html#余談新しいmakefile作成cmake",
    "title": "インストール概要",
    "section": "余談：新しいMakefile作成CMake",
    "text": "余談：新しいMakefile作成CMake\n\n高速\n作成側とインストール側の両方でCMakeのインストールが必要\n\n使用時は空のディレクトリを作成し、その中で実行する\nmkdir build\ncmake &lt;CMakeLists.txtが配置されたディレクトリ&gt;\nmake"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#パッケージマネージャーとは",
    "href": "reading_circle/2023_0704_install_software.html#パッケージマネージャーとは",
    "title": "インストール概要",
    "section": "パッケージマネージャーとは？",
    "text": "パッケージマネージャーとは？\nソフトウェアのインストールやバージョン管理を行う\nソフトのこと\n（Homebrew,Anaconda,pip3など）\n以下の利点がある\n\nインストールをコマンド１つで行える\nアップデートの際、ソフトを入れ直す必要がない\nインストールに必要なものを全て入れてくれる"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#homebrewって何",
    "href": "reading_circle/2023_0704_install_software.html#homebrewって何",
    "title": "インストール概要",
    "section": "Homebrewって何？",
    "text": "Homebrewって何？\nMacOS、Linux用のパッケージマネージャー\nGithub上に公式が公開しているリポジトリから\nソフトウェアをインストールできる。\n\nインストール\n\nbrew install &lt;ソフト名&gt;\n\nインストールしたソフトの一覧表示\n\nbrew list \n\nHomebrewで入れたソフトのアップデート\n\nbrew update"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#便利機能",
    "href": "reading_circle/2023_0704_install_software.html#便利機能",
    "title": "インストール概要",
    "section": "便利機能",
    "text": "便利機能\nbottle\nバイナリーデータを直接ダウンロードする。\n以下の条件下で使用できなくなるので注意\n\nMacOSのバージョンが対応していない\nHomebrewがデフォルトの場所にインストールされてい\n\ntap\nGithub上にアップロードされている公式以外の\nリポジトリのソフトをインストールできる。\nbrew install &lt;githubユーザー名&gt;/&lt;リポジトリ名&gt;"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#インストール時のエラー対応",
    "href": "reading_circle/2023_0704_install_software.html#インストール時のエラー対応",
    "title": "インストール概要",
    "section": "インストール時のエラー対応",
    "text": "インストール時のエラー対応\n\nパッケージマネージャーを使用\nバイナリーデータを直接ダウンロード\nソフトウェアのissueを確認"
  },
  {
    "objectID": "reading_circle/2023_0704_install_software.html#解決が難しい状況",
    "href": "reading_circle/2023_0704_install_software.html#解決が難しい状況",
    "title": "インストール概要",
    "section": "解決が難しい状況",
    "text": "解決が難しい状況\n\n管理者権限がない\n必須のソフトの配布が終了している\n\n対応策\n\nApptainerなど構築済みのものをパスを指定して使用する\n別のソフトウェアを探す\n環境を変える\n\nDDBJからScorpionへ移動する"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About Me",
    "section": "",
    "text": "鈴木優太\nMail yuta.suzuki.t2あdc.tohoku.ac.jp(あを@に変えてください)\nLink\n\nGitHub\ncode speed-up slide\nsoft install slide"
  }
]